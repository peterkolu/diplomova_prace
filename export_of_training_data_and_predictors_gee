// This script processes remote sensing data over the Czech Republic.
// It calculates vegetation indices, terrain variables, and forest types from Sentinel-2 and CORINE 2018.
// It exports training samples and predictors for AGB modeling.
var geometry = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.MultiPoint(
        [[14.778731482249903, 50.710360989745105],
         [14.933111782305, 50.841598391280385],
         [15.186691934476322, 50.79959853412277],
         [15.043526346097416, 50.73315182955094],
         [15.120741040198418, 50.64154728165089],
         [15.350349009721244, 50.556984825378485],
         [15.242474287206601, 50.49222003720309],
         [15.25896114994631, 50.39102991155371],
         [13.378923753426143, 50.35911284487],
         [13.95117358595328, 50.394349925966175],
         [14.370721477046441, 50.24746930727511],
         [14.35052088646021, 50.22643953820111],
         [14.398280568895236, 50.21615401300527],
         [14.916480738272385, 50.42617710840858],
         [14.923647600760178, 50.42784482877822],
         [14.897012729883059, 50.417743216569086],
         [13.220737850333627, 50.063913413953664],
         [13.744648372794565, 50.03393099562082],
         [13.33725542150423, 49.890390053773174],
         [12.756111906373402, 49.74712236542042],
         [12.742121504151722, 49.74928527888572],
         [13.859365743634404, 49.60388200659433],
         [13.923567098614873, 49.607330581836955],
         [14.213087542146878, 49.15397924524339],
         [14.208881838411527, 49.143649197779354],
         [14.173715983145376, 49.14831300179599],
         [14.446147172294266, 48.965797100918216],
         [14.46777650579036, 48.97481207104474],
         [14.531691804003234, 48.980624871978414],
         [14.523452057909484, 48.96177184030454],
         [13.181456839593894, 49.358824063105246],
         [13.485640799554831, 49.35681150605807],
         [12.594872467963727, 50.17893001639217],
         [12.662163727729352, 50.20706396250022],
         [15.073399122311345, 49.55466075673966],
         [15.211414869381658, 49.52168690511327],
         [15.317158277584783, 49.489582881930716],
         [15.438007886959783, 49.540181737514274],
         [16.06463101920573, 50.372710545275716],
         [15.97034582199183, 49.94248277548121],
         [15.225884510876163, 50.06579266712243],
         [15.189663960339054, 50.08121688886042],
         [15.097569260662631, 50.115996793356324],
         [15.237595341844763, 50.24500139906711],
         [15.407540105028357, 50.30249061986194],
         [15.393524397250506, 49.910272263554816],
         [15.224111035222471, 49.928835914496695],
         [15.622365429753721, 49.95137367320295],
         [13.432209697144234, 49.15480009167793],
         [13.556835856812203, 49.14312268142013],
         [15.013101747512048, 49.1448653547132],
         [15.474527528762048, 49.17270596407915],
         [15.745752504347985, 49.086439068924896],
         [16.52094320957064, 49.09379667481726],
         [16.72144369785189, 49.06816109015507],
         [16.14669172731109, 49.01466070307437],
         [17.130280986695663, 49.67100201854241],
         [17.003938213258163, 49.70187664351338],
         [16.827813640504257, 49.65322355928503],
         [17.460179079928082, 49.29848249892304],
         [17.609181155123395, 49.33988421179961],
         [17.75971755713119, 49.435072221759356],
         [17.97504903060259, 49.47448509656213],
         [18.201017590542236, 49.82820358855113],
         [18.31774732687036, 49.78588409059023],
         [17.959318371792236, 49.84392548817065],
         [16.12749799095349, 49.52853932636104],
         [16.411769231187865, 49.533441565539384],
         [16.304652531969115, 49.57019268964065],
         [16.00767834984021, 49.50424370703316],
         [16.44636996455282, 49.93634603925937],
         [15.329768892584426, 49.76427689212495],
         [14.828327868052206, 49.76040009119479],
         [14.43795260232152, 49.534002319129705],
         [14.15460212788695, 50.66713019797269],
         [14.237164864355432, 49.91308420278118],
         [14.846792119117955, 49.400554522397385],
         [12.78766802893053, 50.04663539095219],
         [13.101121703246935, 50.04641492097351],
         [15.76145945580234, 50.288758141266555],
         [15.635460005118746, 50.22510256546649],
         [15.81547215814835, 50.60387700691673],
         [14.223854421115512, 50.5102426953201],
         [14.50778233859598, 50.46174793929095],
         [17.113107628797074, 49.47020501712975],
         [16.997633459284945, 48.823357976063896],
         [14.690290565515562, 50.163037151683874],
         [14.51931583407025, 50.123212457925185],
         [13.181337511678985, 49.65205671225189],
         [13.006586229940703, 49.67183531589866],
         [12.866977940715003, 49.518544018458336],
         [13.037266026652503, 49.49123288725441],
         [15.711771716129128, 48.93791578900278],
         [15.354053044755256, 49.02287008757617],
         [17.11408921296862, 50.23527006177065],
         [17.653455226900675, 50.23125119311172],
         [17.01166733786298, 49.96253709761149],
         [17.39059841953706, 50.03864310759681],
         [17.46999180637788, 49.98952781958226],
         [17.52837134064036, 49.70835095555786],
         [12.955949423980572, 49.81690065758112],
         [12.861651151210554, 49.94510326588742],
         [13.12154184615597, 49.859092201598],
         [12.982839453577846, 49.887745902479374],
         [12.716052028339808, 49.63880446362848],
         [12.935435268085902, 49.58118508010408],
         [12.630221339863246, 49.6181227152112],
         [12.67107674757809, 49.58007206664056],
         [12.828615542281531, 49.40579696419731],
         [12.948263522017859, 49.38970958549373],
         [13.39358724892174, 49.53428403236163],
         [13.536066191792834, 49.58238817143546],
         [13.661035674214709, 49.55945553402737],
         [13.829898143191208, 49.83588134498696],
         [13.895816111941208, 49.864659463393664],
         [14.169101024050583, 49.890323934548164],
         [14.780262133753647, 50.01712923045232],
         [15.015438220179428, 50.027275987718546],
         [15.001361987269272, 50.07313022450434],
         [14.066011670956463, 48.73235625396731],
         [14.294664625058026, 48.741866166116935],
         [14.651033643612713, 48.740507717384325],
         [14.486925367245526, 48.73960206449875],
         [13.899979226906089, 49.05099404112868],
         [14.100479715187339, 49.084958835324485],
         [16.072729770571467, 49.32489392895636],
         [15.83892697516131, 49.31728525943503],
         [15.792578403383967, 49.24920254985217],
         [16.016081516176936, 49.261751164893354],
         [15.912741367251154, 49.353304151416765],
         [15.939177219301936, 49.31661384980162],
         [15.395919747628554, 49.333394305979205],
         [15.180313058175429, 49.364035565078936],
         [15.480377145089491, 49.363811975392956],
         [14.97603601960121, 49.3020623532924],
         [15.047103829659804, 49.39510463945831],
         [16.619165178594884, 48.898228249791686],
         [16.85468458777457, 48.830924430421064],
         [16.99407362586051, 48.982568740253704],
         [16.405618425665196, 48.974907311848675],
         [16.205117937383946, 48.85035697217178],
         [16.154992815313634, 48.902290682534925],
         [16.57152238527824, 49.48355994162746],
         [16.707478195825114, 49.58872411495419],
         [16.97252336184074, 49.55889118600478],
         [16.56602922121574, 49.436698045774236],
         [17.100926071801677, 49.43044640692142],
         [16.467986778950635, 49.30857540142139],
         [16.747451500630323, 49.383728664902144],
         [16.84838839027876, 49.4087542461119],
         [17.014556603169385, 49.311709079406235],
         [16.987777428364698, 49.26961162560585],
         [15.864510087595614, 50.22326618743759],
         [15.883736161814364, 50.27858766064224],
         [16.175560502634674, 50.29394333929623],
         [16.293663529978424, 50.27463825670725],
         [16.34619191132608, 50.25466681034122],
         [16.3032765670878, 50.2026139509797],
         [16.11925557099405, 50.20173493412247],
         [15.611573715944704, 50.73023516188986],
         [15.576383133669314, 50.71589025294342],
         [15.538617630739626, 50.69664814130974],
         [15.487290879030642, 50.71752057740011],
         [15.568315048952517, 50.73523311349162],
         [15.691224594850954, 50.727301333231054],
         [15.035340078275796, 50.93970256322855],
         [15.216957815092202, 50.981869860099515],
         [15.160996206205484, 50.92996621344225],
         [15.283562429350015, 50.95333002856166],
         [15.079285390775796, 50.8931660497232],
         [14.521750013572174, 50.906369794612125],
         [14.468878309470611, 50.85936651250135],
         [14.31884626601358, 50.85828292864827],
         [14.643286268454986, 50.83400405091256],
         [13.945611436524361, 50.32434069680387],
         [13.432687242188424, 50.19396268032161],
         [13.392175157227486, 50.28881844211597],
         [13.101724107422799, 50.29057325034134],
         [13.333810289063424, 50.5709371378391],
         [13.486245591797799, 50.5909936482008],
         [13.881066758789986, 50.6350008065974],
         [13.723824937500924, 50.56788431135843],
         [14.628220004716672, 50.67017003116441],
         [14.277344150224485, 50.649276517476245],
         [14.620666904130735, 50.54463876197325],
         [16.998454566927904, 49.17958451691029],
         [17.48047971341228, 48.99341020209481],
         [18.03254270169353, 49.18497046585768],
         [17.553264137240404, 49.13063530077843],
         [17.87873410794353, 49.06589427327636],
         [18.41999528148811, 49.509697893900466],
         [18.275799724847484, 49.581093539781826],
         [18.456387493402172, 49.64604961957731],
         [18.711819622308422, 49.59088698195419],
         [17.728252669339405, 49.77975922325519],
         [17.51539256191753, 49.81477404683309],
         [17.994671126370655, 49.69277764684215],
         [14.336024928717963, 48.624927489189204],
         [14.493953395514838, 48.65850215370525],
         [14.47975864445187, 49.35802251077469],
         [14.294707680096401, 49.35220813762358],
         [14.611251259197964, 49.29604172420526],
         [16.09240227146732, 49.75757837498156],
         [15.848986438947792, 49.851749394685],
         [15.644366077619667, 49.78041781755199],
         [15.57810478611576, 49.801916968163745],
         [15.997645191389198, 49.8426726440561],
         [15.784718769799525, 49.603534437492726],
         [15.57735182644015, 49.60676055436985],
         [15.585248249779994, 49.62800309468441],
         [15.675370472680385, 49.63867647709417],
         [16.777225438961295, 49.99213658744066],
         [16.552005712398795, 50.041331895578466],
         [16.39510721386364, 50.01376225415437],
         [17.116471134480847, 49.84906788859671],
         [16.885758243855847, 49.8959767455632],
         [17.761231266316784, 49.91941408953808],
         [16.92276269131757, 50.1627772435969],
         [16.74217492276288, 50.07648474767674],
         [17.378008662997257, 50.11965043859483]]);


// Define region of interest: Czech Republic
var region = ee.FeatureCollection('projects/tidy-forest-404511/assets/hranice_cr');


var clc2018 = ee.Image('COPERNICUS/CORINE/V20/100m/2018')
  .select('landcover')
  .clip(region)
  .reproject({ crs: 'EPSG:25833', scale: 100 });

// Create forest masks from CORINE
var isForest = function(img) {
  return img.eq(311).or(img.eq(312)).or(img.eq(313));
};

var forestMask2018 = isForest(clc2018);


//  Forest type from CORINE 2018
var forestType2018 = clc2018
  .where(clc2018.eq(311), 1)  // coniferous
  .where(clc2018.eq(312), 2)  // broadleaf
  .where(clc2018.eq(313), 3)  // mixed
  .rename('forest_type_2018');
  
var forest_type_score = clc2018
  .where(clc2018.eq(311), 0)
  .where(clc2018.eq(312), 1)
  .where(clc2018.eq(313), 0.5)
  .rename('forest_type_score');

//  Sentinel-2 bands to use
var s2bands = ['B2', 'B3', 'B4', 'B5', 'B7', 'B8', 'B11'];

// Sentinel-2 cloud masking
function maskS2clouds(image) {
  var qa = image.select('QA60');
  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0).and(qa.bitwiseAnd(cirrusBitMask).eq(0));
  return image.updateMask(mask);
}

function maskS2SCL(image) {
  var scl = image.select('SCL');
  var cloudMask = scl.neq(3).and(scl.neq(7)).and(scl.neq(8)).and(scl.neq(9)).and(scl.neq(10));
  return image.updateMask(cloudMask);
}

// Add vegetation indices to Sentinel-2 image
function addIndices(image) {
  var ndvi = image.normalizedDifference(['B8', 'B4']).rename('NDVI');
  var ndvi705 = image.normalizedDifference(['B7', 'B5']).rename('NDVI705');
  var msi = image.expression('SWIR / NIR', {
    'SWIR': image.select('B11'),
    'NIR': image.select('B8')
  }).rename('MSI');

  return image.addBands([ndvi, ndvi705, msi]);
}


var s2 = ee.ImageCollection('COPERNICUS/S2_SR')
  .filterDate('2018-06-01', '2018-09-30')
  .filterBounds(region)
  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20))
  .map(maskS2clouds)
  .map(function(img) { return img.select(s2bands); })
  .map(addIndices)
  .median()
  .resample('bilinear')
  .clip(region);

// Load elevation and calculate slope
var dem = ee.Image('USGS/SRTMGL1_003')
  .resample('bilinear')
  .clip(region);
var elevation = dem.rename('elevation');
var slope = ee.Terrain.slope(dem).rename('slope');

// One-hot encoding forest_type_2018
var forestType1 = forestType2018.eq(1).rename('forest_type_2018_1');
var forestType2 = forestType2018.eq(2).rename('forest_type_2018_2');
var forestType3 = forestType2018.eq(3).rename('forest_type_2018_3');


// ESA AGB product
var agb = ee.Image('projects/tidy-forest-404511/assets/ESA_AGB_2018_UTM')
  .select('b1')
  .rename('AGB')
  .resample('bilinear')
  .clip(region);

//EPSG:25833
var proj = 'EPSG:25833';
var predictors = s2.select(['NDVI', 'NDVI705', 'MSI'])  
  .addBands(elevation)
  .addBands(slope)
  .addBands(forestType1)
  .addBands(forestType2)
  .addBands(forestType3)
  .addBands(forest_type_score)

  .reproject({crs: proj, scale: 100});

var agb_reprojected = agb.reproject({crs: proj, scale: 100});

// Create forest training samples
var sampleMask = forestMask2018;
var forestSamples = agb_reprojected.updateMask(sampleMask)
  .addBands(predictors)
  .sample({
    region: region,
    scale: 100,
    numPixels: 5000,
    seed: 42,
    geometries: true
  })
  .filter(ee.Filter.notNull([
  'AGB', 'NDVI', 'NDVI705', 'MSI',
  'elevation', 'slope'
]));

// Add manually defined negative samples
var negPoints = geometry;

var negativeSamples = predictors.sampleRegions({
  collection: negPoints,
  scale: 100,
  geometries: true
}).map(function(f) {
  return f.set('AGB', 0)
          .set('forest_type_2018', 0)
});

// Merge positive and negative samples
var allSamples = forestSamples.merge(negativeSamples);

// Export training data
Export.table.toDrive({
  collection: allSamples,
  description: 'AGB_training_all_epsg25833',
  fileFormat: 'CSV'
});

// Visualization
Map.addLayer(s2, {bands: ['B4','B3','B2'], min: 0, max: 3000}, 'Sentinel-2 RGB');
Map.addLayer(forestType2018.updateMask(forestType2018.eq(1)), {palette: ['darkgreen']}, 'Coniferous');
Map.addLayer(forestType2018.updateMask(forestType2018.eq(2)), {palette: ['limegreen']}, 'Broadleaf');
Map.addLayer(forestType2018.updateMask(forestType2018.eq(3)), {palette: ['goldenrod']}, 'Mixed');

Map.addLayer(agb, {min: 0, max: 150, palette: ['#ffffcc', '#41b6c4', '#0c2c84']}, 'ESA AGB 2018');
Map.addLayer(forestSamples, {color: 'green'}, 'Forest samples');
Map.addLayer(negativeSamples, {color: 'red'}, 'Non-forest samples');
Map.addLayer(forestMask2018.updateMask(forestMask2018), {palette: ['blue']}, 'Forest mask');
print('Number of forest samples:', forestSamples.size());

// Export Sentinel-2 predictor rasters for each year
function exportIndices(year, startDate, endDate, maskFunction, cloudThreshold) {
  var collection = ee.ImageCollection('COPERNICUS/S2_SR')
    .filterDate(startDate, endDate)
    .filterBounds(region)
    .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', cloudThreshold)) 
    .map(maskFunction)
    .map(function(img) { return img.select(['B2', 'B3', 'B4', 'B5', 'B7', 'B8', 'B11']); })
    .map(addIndices);

  var image = ee.Image(collection.median()).clip(region);

  var predictors = image.select(['NDVI', 'NDVI705', 'MSI'])
    .addBands(elevation)
    .addBands(slope)
    .addBands(forestType1)
    .addBands(forestType2)
    .addBands(forestType3)
    .addBands(forest_type_score)
    .toFloat();

  Export.image.toDrive({
    image: predictors,
    description: 'predictors_' + year + '_all',
    folder: 'GEE_exports',
    fileNamePrefix: 'predictors_' + year + '_all',
    region: region.geometry(),
    scale: 100,
    crs: 'EPSG:25833',
    maxPixels: 1e13
  });

  Map.addLayer(image, {bands: ['B4', 'B3', 'B2'], min: 0, max: 3000}, 'S2 RGB ' + year);
}


exportIndices(2018, '2018-05-01', '2018-09-30', maskS2SCL, 20);
exportIndices(2019, '2019-05-01', '2019-09-30', maskS2SCL, 20);
exportIndices(2020, '2020-05-01', '2020-09-30', maskS2SCL, 20);
exportIndices(2021, '2021-05-01', '2021-09-30', maskS2SCL, 50);

function exportIndices1(year, startDate, endDate, maskFunction, cloudThreshold) {
  var collection = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')
    .filterDate(startDate, endDate)
    .filterBounds(region)
    .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', cloudThreshold)) 
    .map(maskFunction)
    .map(function(img) { return img.select(['B2', 'B3', 'B4', 'B5', 'B7', 'B8', 'B11']); })
    .map(addIndices);

  var image = ee.Image(collection.median()).clip(region);

  var predictors = image.select(['NDVI', 'NDVI705', 'MSI'])
    .addBands(elevation)
    .addBands(slope)
    .addBands(forestType1)
    .addBands(forestType2)
    .addBands(forestType3)
    .addBands(forest_type_score)
    .toFloat();

  Export.image.toDrive({
    image: predictors,
    description: 'predictors_' + year + '_all',
    folder: 'GEE_exports',
    fileNamePrefix: 'predictors_' + year + '_all',
    region: region.geometry(),
    scale: 100,
    crs: 'EPSG:25833',
    maxPixels: 1e13
  });

  Map.addLayer(image, {bands: ['B4', 'B3', 'B2'], min: 0, max: 3000}, 'S2 RGB ' + year);
}

exportIndices1(2022, '2022-05-01', '2022-09-30', maskS2SCL, 50);
exportIndices1(2023, '2023-05-01', '2023-09-30', maskS2SCL, 20);
exportIndices1(2024, '2024-05-01', '2024-09-30', maskS2SCL, 20);

